version: "3.8"

services:
  redis:
    image: redis:7-alpine
    networks:
      - app_network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.prod
    ports:
    #  - "8000:8000"
    - "127.0.0.1:8000:8000"  # Localhost binding only
    volumes:
      - /var/www/media:/var/www/media
    environment:
      - DJANGO_ENVIRONMENT=production
      - DB_HOST=host.docker.internal
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - REDIS_HOST=redis  # Critical for Channels
    networks:
      - app_network
    depends_on:
      redis:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.prod
    ports:
    #  - "7777:80"
      - "127.0.0.1:7777:80"    # Localhost binding only
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: