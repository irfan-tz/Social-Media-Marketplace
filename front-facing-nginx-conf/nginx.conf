worker_processes auto;
pid /run/nginx.pid;
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}
http {
    # Basic settings
    include mime.types;
    default_type application/octet-stream;
    server_tokens off;

            
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # CORS configuration with stricter validation
    map $http_origin $cors_origin {
        default "";
        "https://192.168.2.249" "$http_origin";
        "http://localhost:8080" "$http_origin";
    }
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    # ssl_stapling on;
    # ssl_stapling_verify on;
    
    # Logging
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time';
    access_log /var/log/nginx/security.log security;
    error_log /var/log/nginx/error.log warn;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    
    # IP blacklist
    geo $bad_user {
        default 0;
        # Add IPs to block here
        # "192.168.1.1" 1;
    }
    
    # Main HTTPS server
    server {
        listen 443 ssl;
        http2 on;
	server_name 192.168.2.249;
        
        # Block bad users
        if ($bad_user) {
            return 403;
        }
        
        # SSL certificates
        ssl_certificate /etc/ssl/certs/nginx-ecdsa.crt;
        ssl_certificate_key /etc/ssl/private/nginx-ecdsa.key;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Updated CSP with stricter rules
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' wss://192.168.2.249 https://192.168.2.249; frame-ancestors 'none'; form-action 'self'; base-uri 'self'; object-src 'none'" always;
        
        add_header Permissions-Policy "geolocation=(), camera=(), microphone=(), payment=()" always;
        
        # Connection limits
        limit_conn conn_limit 20;
        limit_conn_status 429;
        
        # Timeout settings
        client_body_timeout 60s;
        client_header_timeout 60s;
        send_timeout 60s;
        keepalive_timeout 65s;
        
        # Static file cache
        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;
        
        # Frontend location
        location / {
            proxy_pass http://127.0.0.1:7777;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_hide_header X-Powered-By;
            expires 1h;
            add_header Cache-Control "public, no-transform";
            add_header X-Content-Type-Options "nosniff";
        }
        
        # Token endpoint
        location /api/token/ {
            limit_req zone=auth burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            client_max_body_size 1M;
            client_body_buffer_size 128k;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers for auth endpoints
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken' always;
            add_header Access-Control-Allow-Credentials 'true' always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-CSRFToken $http_x_csrftoken;
            
            client_max_body_size 10M;
            client_body_buffer_size 512k;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken' always;
            add_header Access-Control-Allow-Credentials 'true' always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin $cors_origin;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
                add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            
            if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS)$) {
                return 405;
            }
            
            if ($uri ~* "(;|\-\-|union\s+select|insert\s+into|drop\s+table|update\s+table|md5|benchmark)") {
                return 403;
            }
        }
        
        # Authentication endpoints
        location /api/auth/ {
            limit_req zone=auth burst=3 nodelay;
            limit_req_status 429;
            
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 1M;
            
            if ($request_uri ~* "(\.\.|%2e%2e)") {
                return 403;
            }
        }
        
        # WebSocket connections with improved security
        location /ws/ {
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 300s;
            proxy_set_header Host $host;
            proxy_set_header Origin "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            client_max_body_size 10M;
            limit_conn conn_limit 10;
        }
        
        # Static files
        location /static/ {
            alias /var/www/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Content-Type-Options "nosniff";
            try_files $uri $uri/ =404;
        }
        
        # Media files
        location /media/ {
            alias /var/www/media/;
            client_max_body_size 10M;
            valid_referers none blocked server_names;
            if ($invalid_referer) {
                return 403;
            }
            
            location ~* \.(php|pl|py|jsp|asp|sh|cgi|bash|exe)$ {
                deny all;
                return 403;
            }
            
            location ~* (/\.+|\.\.+) {
                deny all;
                return 403;
            }
            
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Content-Type-Options "nosniff";
            
            autoindex off;
        }
        
        # Block source maps
        location ~* \.map$ {
            deny all;
            return 404;
        }
        
        # Block hidden files
        location ~ /\.(?!well-known) {
            deny all;
            return 403;
        }
        
        # Block sensitive files
        location ~* \.(git|env|yml|ini|conf|log)$ {
            deny all;
            return 403;
        }
        
        # Honeypot locations
        location ~ ^/(wp-admin|administrator|admin/config|phpmyadmin|myadmin)/ {
            access_log /var/log/nginx/honeypot.log security;
            return 403;
        }
        
        # Default locations
        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name 192.168.2.249;
        
        add_header X-Content-Type-Options "nosniff" always;
        access_log /var/log/nginx/http-access.log security;
        return 301 https://$host$request_uri;
    }
}
